<?php
/**
 * Created by PhpStorm.
 * User: Андрей
 * Date: 16.10.2018
 * Time: 16:12
 */

namespace app\models\helpers;
use yii\behaviors\TimestampBehavior;
use yii\helpers\ArrayHelper;

class GraduationRatings extends \app\models\GraduationRatings
{
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                /*'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => 'updated_at',
                'value' => new Expression('NOW()'),*/
            ],
        ];
    }

    public function afterFind()
    {
        $this->arrAllowed = explode(',', $this->allowed);
        $count = count($this->arrAllowed);
        if( $count > 2) {
            unset($this->arrAllowed[0]);
            unset($this->arrAllowed[$count-1]);
        }

        parent::afterFind(); // TODO: Change the autogenerated stub
    }

    public function beforeValidate()
    {
        if(!$this->isNewRecord) {
            $data = \Yii::$app->request->post('GraduationRatings');
            $arrAllowed = empty($data['arrAllowed']) ? [] : $data['arrAllowed'];
            if( $arrAllowed !== false) {
                $allowed = array_merge(['--'],$arrAllowed, ['--']);
                $this->allowed = implode(',', $allowed);
            }
        }

        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    public static function getList()
    {
        $arCats = self::find()->all();
        return ArrayHelper::map($arCats, 'id', 'name');
    }
}