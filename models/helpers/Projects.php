<?php
/**
 * Created by PhpStorm.
 * User: Андрей
 * Date: 10.10.2018
 * Time: 19:39
 */

namespace app\models\helpers;

use yii\behaviors\TimestampBehavior;
use yii\helpers\ArrayHelper;
use app\models\helpers\ProjectSynonims;
class Projects extends \app\models\Projects
{
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                /*'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => 'updated_at',
                'value' => new Expression('NOW()'),*/
            ],
        ];
    }

    public function beforeValidate()
    {
        /*die(print_r($this->START_ICO));
        if(!empty($this->START_ICO))
            $this->START_ICO = strtotime($this->START_ICO );
        if(!empty($this->END_ICO))
            $this->END_ICO = strtotime($this->END_ICO);*/

        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    public static function getList()
    {
        $arCats = self::find()->all();
        return ArrayHelper::map($arCats, 'id', 'ICO_NAME');
    }

    public static function getProjectByAttr($name, $slug) {
        $projectModel = self::find()->where(['like', 'ICO_NAME', $name])->one();

        if(empty($projectModel)) {
            $synonimModel = ProjectSynonims::find()->where(['like', 'project_synonim', $name])->one();
            if(!empty($synonimModel))
                $projectModel = self::find()->where(['=', 'ICO_NAME', $synonimModel->project_name])->one();
        }
        if(empty($projectModel)) {
            $synonimModel = ProjectSynonims::find()->where(['like', 'project_synonim', $slug])->one();
            if(!empty($synonimModel))
                $projectModel = self::find()->where(['=', 'ICO_NAME', $synonimModel->project_name])->one();
        }
        if(empty($projectModel)) {
            $synonimModel = ProjectSynonims::find()->where(['like', 'project_synonim', $slug])->one();
            if(!empty($synonimModel))
                $projectModel = self::find()->where(['=', 'ICO_NAME', $synonimModel->project_name])->one();
        }

        return $projectModel;
    }

    public static function setAllStar()
    {

    }

    public static function setStar($id)
    {
        $oProject = Projects::find()->where(['=', 'id', $id])->one();

    }
}